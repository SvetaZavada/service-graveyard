const yesBtn = document.getElementById("yesBtn");
const noBtn = document.getElementById("noBtn");


const glitchSound = document.getElementById("glitchSound");
const errorSound = document.getElementById("errorSound");
const errorSrc = errorSound.querySelector("source").src;

let madnessActive = false;
let madnessInterval;
let madnessTimeout;

function createMadModal({ title = "–û—à–∏–±–∫–∞", message = "–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫...", size = "normal", dark = false, glitch = false }) {
  const original = document.getElementById("start-modal");
  const clone = original.cloneNode(true);

  clone.classList.remove("start-model");
  clone.classList.remove("light", "dark");
  clone.classList.remove("small", "normal", "large");

  clone.classList.add(size);
  clone.classList.add(dark ? "dark" : "light");

  if (glitch) {
    clone.classList.add("glitchy");
  }

  // —Å–ª—É—á–∞–π–Ω–∞—è –ø–æ–∑–∏—Ü–∏—è
  clone.style.top = Math.random() * 120 - 10 + "%";
  clone.style.left = Math.random() * 120 - 10 + "%";
  clone.style.zIndex = 100 + Math.floor(Math.random() * 1000);

  // –º–µ–Ω—è–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫
  const titleEl = clone.querySelector(".modal-title");
  if (titleEl) titleEl.textContent = title;

  // –º–µ–Ω—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
  const messageEl = clone.querySelector(".modal-content p");
  if (messageEl) messageEl.textContent = message;

  // –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –∫–∞—Å—Ç–æ–º–Ω—É—é –ª–æ–≥–∏–∫—É –Ω–∞ –∫–Ω–æ–ø–∫–∏, –µ—Å–ª–∏ —Ö–æ—á–µ—à—å
  const yes = clone.querySelector("button#yesBtn");
  const no = clone.querySelector("button#noBtn");

  if (yes) {
    yes.onclick = triggerMadness;
  }

  if (no) {
    no.onclick = () => {};
  }

  // –¥–æ–±–∞–≤–ª—è–µ–º –≤ DOM
  document.body.appendChild(clone);

  // —É–¥–∞–ª–∏–º —á–µ—Ä–µ–∑ 7 —Å–µ–∫—É–Ω–¥
  setTimeout(() => {
    if (clone.parentNode) clone.remove();
  }, 7000);

  playErrorPerModal();
}

noBtn.addEventListener("click", () => {
  window.location.href = "mems.html";
});

yesBtn.addEventListener("click", () => {
  if (madnessActive) return;

  madnessActive = true;
  glitchSound.play();
  glitchSound.volume = 0.35;

   // üö® –ó–ê–ú–ï–ù–ê: —Ö–∞–æ—Ç–∏—á–Ω—ã–π —Å–ø–∞–≤–Ω –º–æ–¥–∞–ª–æ–∫ (–æ—Ç 1 –¥–æ 7), —Å —Ä–∞–Ω–¥–æ–º–Ω–æ–π –∑–∞–¥–µ—Ä–∂–∫–æ–π
  function spawnModalsRandomly() {
  if (!madnessActive) return;

  const howMany = Math.floor(Math.random() * 10) + 3; // –æ—Ç 3 –¥–æ 10

  for (let i = 0; i < howMany; i++) {
    // –†–∞–∑–º–µ—Ä
    const sizes = ["small", "normal", "large"];
    const size = sizes[Math.floor(Math.random() * sizes.length)];

    // –¢–µ–º–∞
    const themes = ["light", "dark"];
    const theme = themes[Math.floor(Math.random() * themes.length)];

    // –†–∞–Ω–¥–æ–º–Ω—ã–π –∫–æ–¥ –æ—à–∏–±–∫–∏
    const errorCodes = ["0xDEADFADE", "0xBADA55", "0xFA1LURE", "0xC0FFEE", "0xABADBABE", "0xBADCAFFE"];
    const errorCode = errorCodes[Math.floor(Math.random() * errorCodes.length)];

    createMadModal({
      title: errorCode,
      message: size === "small" ? "–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞" : "–°–∏—Å—Ç–µ–º–∞ –ø–µ—Ä–µ–≥—Ä—É–∂–µ–Ω–∞!",
      size,
      dark: theme === "dark",
      glitch: Math.random() < 0.3 // 30% —à–∞–Ω—Å –Ω–∞ –≥–ª–∏—Ç—á
    });
  }

  // –°–ª–µ–¥—É—é—â–∏–π –≤—ã–∑–æ–≤ —á–µ—Ä–µ–∑ —Å–ª—É—á–∞–π–Ω–æ–µ –≤—Ä–µ–º—è (–æ—Ç 100 –¥–æ 600 –º—Å)
  const nextDelay = Math.random() * 500 + 100;
  madnessInterval = setTimeout(spawnModalsRandomly, nextDelay);
}

  // –°—Ç–∞—Ä—Ç—É–µ–º —Ö–∞–æ—Å
  spawnModalsRandomly();

  // –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —á–µ—Ä–µ–∑ 15 —Å–µ–∫, –∑–∞–ø—É—Å–∫–∞–µ–º BSOD (–Ω–æ –ø–æ–∫–∞ –∑–∞–∫–æ–º–º–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω)
  madnessTimeout = setTimeout(() => {
    clearInterval(madnessInterval);
    glitchSound.pause();
    glitchSound.currentTime = 0;
    errorSound.play();
    document.getElementById("start-modal")?.remove(); 

    document.getElementById("bsod").classList.remove("hidden"); // –≤–∫–ª—é—á–∞–µ–º –ø–æ–∑–∂–µ
  }, 8000);
});

function triggerMadness() {
  if (!madnessActive) yesBtn.click();
}

function playErrorPerModal() {
  const a = new Audio(errorSrc);
  a.volume = 1.0;   // –Ω–µ –æ–≥–ª–æ—Ö–Ω—É—Ç—å
  a.play().catch(() => {}); // –Ω–∞ –≤—Å—è–∫–∏–π —Å–ª—É—á–∞–π, —á—Ç–æ–±—ã –Ω–µ –ø–∞–¥–∞–ª–æ –≤ –º–æ–±–∞–π–ª–µ
}
