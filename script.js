let allowModals = true;
const yesBtn = document.getElementById("yesBtn");
const noBtn = document.getElementById("noBtn");
const headerColors = {
  light: ["#0047ab"],
  dark: ["#00ffff", "#00ff00", "#ff1493", "#ffffff"]
};



const glitchSound = document.getElementById("glitchSound");
const errorSound = document.getElementById("errorSound");
const errorSrc = errorSound.querySelector("source").src;

glitchSound.load();
errorSound.load();


let sharedErrorSound = null;
let madnessActive = false;
let madnessInterval;
let madnessTimeout;

// –ü—Ä–æ–±—É–∂–¥–µ–Ω–∏–µ –∑–≤—É–∫–æ–≤ –Ω–∞ –ø–µ—Ä–≤–æ–µ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ
function unlockAudio() {
  [glitchSound, errorSound].forEach(audio => {
    const playPromise = audio.play();
    if (playPromise !== undefined) {
      playPromise
        .then(() => {
          audio.pause();
          audio.currentTime = 0;
        })
        .catch(err => {
          // Safari –º–æ–∂–µ—Ç —Ä—É–≥–Ω—É—Ç—å—Å—è ‚Äî –∏–≥–Ω–æ—Ä–∏—Ä—É–µ–º
        });
    }
  });
  // –£–¥–∞–ª—è–µ–º —Å–ª—É—à–∞—Ç–µ–ª–∏ ‚Äî –±–æ–ª—å—à–µ –Ω–µ –Ω—É–∂–Ω–æ
  document.removeEventListener("click", unlockAudio);
  document.removeEventListener("touchstart", unlockAudio);
}

// –î–æ–±–∞–≤–∏–º —Å–ª—É—à–∞—Ç–µ–ª—å –Ω–∞ –ø–µ—Ä–≤–æ–µ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ
document.addEventListener("click", unlockAudio, { once: true });
document.addEventListener("touchstart", unlockAudio, { once: true });
  
function createMadModal({ title = "–û—à–∏–±–∫–∞", message = "–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫...", size = "normal", dark = false, glitch = false, headerColor = null }) {
  if (!allowModals) return; // üí£ –°—Ç–æ–ø, –µ—Å–ª–∏ –º–æ–¥–∞–ª–∫–∏ –±–æ–ª—å—à–µ –Ω–µ–ª—å–∑—è
  const original = document.getElementById("start-modal");
  const clone = original.cloneNode(true);

  clone.classList.remove("start-model", "light", "dark", "small", "normal", "large");
  clone.classList.add(size, dark ? "dark" : "light");
if (glitch) {
  applyRandomGlitch(clone); // —ç—Ç–æ —Å—Ä–∞–∑—É –¥–æ–±–∞–≤–ª—è–µ—Ç .glitchy –∏ –æ–¥–∏–Ω –∏–∑ —Ä–∞–Ω–¥–æ–º–Ω—ã—Ö –∫–ª–∞—Å—Å–æ–≤
}
  clone.style.top = Math.random() * 120 - 10 + "%";
  clone.style.left = Math.random() * 120 - 10 + "%";
  clone.style.zIndex = 100 + Math.floor(Math.random() * 1000);

  // –¶–≤–µ—Ç —à–∞–ø–∫–∏
  const headerEl = clone.querySelector(".modal-header");
  if (headerColor && headerEl) {
    headerEl.style.backgroundColor = headerColor;
  }

  // –ó–∞–≥–æ–ª–æ–≤–æ–∫ –∏ –∫—Ä–µ—Å—Ç–∏–∫ ‚Äî –±–µ–∑ —Ñ–æ–Ω–∞
  const titleWrap = clone.querySelector(".modal-title-wrap");
  const closeBtn = clone.querySelector(".modal-close");
 

  const titleEl = clone.querySelector(".modal-title");
if (titleEl && glitch) {
  titleEl.innerHTML = `<span class="glitchy-rgb">${title}</span>`;
} else if (titleEl) {
  titleEl.textContent = title;
}

  const messageEl = clone.querySelector(".modal-content p");
  if (messageEl) messageEl.textContent = message;

  const yes = clone.querySelector("button#yesBtn");
  const no = clone.querySelector("button#noBtn");
  if (yes) yes.onclick = triggerMadness;
  if (no) no.onclick = () => {};

  document.body.appendChild(clone);
  setTimeout(() => clone.remove(), 7000);

  playErrorPerModal();
}

noBtn.addEventListener("click", () => {
  window.location.href = "mems.html";
});

yesBtn.addEventListener("click", () => {
  if (madnessActive) return;

  madnessActive = true;
  glitchSound.play();
  glitchSound.volume = 0.25;

   // üö® –ó–ê–ú–ï–ù–ê: —Ö–∞–æ—Ç–∏—á–Ω—ã–π —Å–ø–∞–≤–Ω –º–æ–¥–∞–ª–æ–∫ (–æ—Ç 1 –¥–æ 7), —Å —Ä–∞–Ω–¥–æ–º–Ω–æ–π –∑–∞–¥–µ—Ä–∂–∫–æ–π
  function spawnModalsRandomly() {
  if (!madnessActive) return;

  const howMany = Math.floor(Math.random() * 20) + 7; // –æ—Ç 3 –¥–æ 10

  for (let i = 0; i < howMany; i++) {
    // –†–∞–∑–º–µ—Ä
    const sizes = ["small", "normal", "large"];
    const size = sizes[Math.floor(Math.random() * sizes.length)];

    // –¢–µ–º–∞
    const themes = ["light", "dark"];
    const theme = themes[Math.floor(Math.random() * themes.length)];

    const headerColor = headerColors[theme][Math.floor(Math.random() * headerColors[theme].length)];

    // –†–∞–Ω–¥–æ–º–Ω—ã–π –∫–æ–¥ –æ—à–∏–±–∫–∏
    const errorCodes = ["0xDEADFADE", "0xBADA55", "0xFA1LURE", "0xC0FFEE", "0xABADBABE", "0xBADCAFFE"];
    const errorCode = errorCodes[Math.floor(Math.random() * errorCodes.length)];

    createMadModal({
  title: errorCode,
  message: size === "small" ? "–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞" : "–°–∏—Å—Ç–µ–º–∞ –ø–µ—Ä–µ–≥—Ä—É–∂–µ–Ω–∞!",
  size,
  dark: theme === "dark",
  glitch: Math.random() < 0.5,
  headerColor
});

  }

  // –°–ª–µ–¥—É—é—â–∏–π –≤—ã–∑–æ–≤ —á–µ—Ä–µ–∑ —Å–ª—É—á–∞–π–Ω–æ–µ –≤—Ä–µ–º—è (–æ—Ç 100 –¥–æ 600 –º—Å)
  const nextDelay = Math.random() * 500 + 100;
  madnessInterval = setTimeout(spawnModalsRandomly, nextDelay);
}

  // –°—Ç–∞—Ä—Ç—É–µ–º —Ö–∞–æ—Å
  spawnModalsRandomly();

  // –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —á–µ—Ä–µ–∑ 15 —Å–µ–∫, –∑–∞–ø—É—Å–∫–∞–µ–º BSOD (–Ω–æ –ø–æ–∫–∞ –∑–∞–∫–æ–º–º–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω)

  setTimeout(() => {
  glitchSound.pause();
  glitchSound.currentTime = 0;

  if (sharedErrorSound) {
    sharedErrorSound.pause();
    sharedErrorSound.currentTime = 0;
  }

  // üßπ –ì–ª—É—à–∏–º –≤—Å–µ –∞—É–¥–∏–æ
  document.querySelectorAll("audio").forEach(audio => {
    try {
      audio.pause();
      audio.currentTime = 0;
    } catch {}
  });

  // üéµ –ò–≥—Ä–∞–µ–º –∑–≤—É–∫ –æ—à–∏–±–∫–∏, —Ç–µ–ø–µ—Ä—å –±–µ–∑ –∫–∞–∫–∞—Ñ–æ–Ω–∏–∏
  errorSound.play();
}, 5500);
  
  madnessTimeout = setTimeout(() => {
  allowModals = false;
  clearTimeout(madnessInterval);

  const bsod = document.getElementById("bsod-preload");
  if (bsod) {
    document.body.style.overflow = "hidden";
document.documentElement.style.overflow = "hidden";
document.body.scrollLeft = 0;
document.documentElement.scrollLeft = 0;
    bsod.style.position = "fixed";
    bsod.style.left = "0";
    bsod.style.top = "0";
    bsod.style.width = "100vw";
    bsod.style.height = "100vh";
    bsod.style.zIndex = "9999";
    bsod.style.display = "flex";
    bsod.style.justifyContent = "center";
    bsod.style.alignItems = "center";
    bsod.style.padding = "20px";
    bsod.style.pointerEvents = "auto";
    bsod.style.fontFamily = "'IBM Plex Mono', monospace";
    bsod.style.background = "#0000AA";
    bsod.style.color = "white";
    bsod.style.visibility = "visible";
    bsod.style.opacity = "1";
  }
}, 6000);

});

function triggerMadness() {
  if (!madnessActive) yesBtn.click();
}



function playErrorPerModal() {
  errorSound.pause();
  errorSound.currentTime = 0;
  errorSound.volume = 1.0;
  errorSound.play().catch(() => {});
}


function applyRandomGlitch(modal) {
  const glitchClasses = ['glitchy-1', 'glitchy-2', 'glitchy-3', 'glitchy-rgb'];
  const randomClass = glitchClasses[Math.floor(Math.random() * glitchClasses.length)];

  modal.classList.add('glitchy', randomClass);

  // ‚ú® –î–æ–±–∞–≤–ª—è–µ–º RGB-–≥–ª–∏—Ç—á –æ—Ç–¥–µ–ª—å–Ω–æ –Ω–∞ –∑–∞–≥–æ–ª–æ–≤–æ–∫
  if (randomClass === 'glitchy-rgb') {
    const header = modal.querySelector('.modal-header');
    if (header) {
      header.classList.add('glitchy-rgb');
    }
  }
}

